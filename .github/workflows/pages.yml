name: Deploy Next.js to GitHub Pages

on:
  push:
    branches: ['master']

  workflow_dispatch: # No inputs needed - GitHub provides branch selector

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages-${{ github.ref }}'
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  NODE_VERSION: '24'

jobs:
  build:
    name: Build Next.js Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        # No version specified - will use packageManager from package.json via corepack

      - name: Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      # - name: Setup Pages
      #   uses: actions/configure-pages@v5
      #   with:
      #     # Automatically inject basePath in your Next.js configuration file and disable
      #     # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
      #     #
      #     # You may remove this line if you want to manage the configuration yourself.
      #     static_site_generator: next

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_BASE_PATH: /${{ github.event.repository.name }}
          NODE_ENV: production

      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

deploy:
  name: Deploy to GitHub Pages
  runs-on: ubuntu-latest
  needs: build
  
  environment:
    name: github-pages
    url: ${{ steps.deployment.outputs.page_url }}
  
  steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
